{
  /**
   *  Include parentheses around a sole arrow function parameter.
   *  Defaults to "avoid"
   *  Valid options:
   *    - avoid
   *    - always
   */
  "arrowParens": "avoid",

  /**
   *  Print spaces between brackets.
   *  Defaults to true
   *  Valid options:
   *    - true
   *    - false
   */
  "bracketSpacing": true,

  /**
   *  Print (to stderr) where a cursor at the given position would move to
   *  after formatting. This option cannot be used with --range-start and
   *  --range-end.
   *  Defaults to -1
   */
  "cursorOffset": -1,

  /**
   *  Which end of line characters to apply.
   *  Defaults to "auto"
   *  Valid options:
   *    - "auto"
   *    - "lf"
   *    - "crlf"
   *    - "cr"
   */
  "endOfLine": "auto",

  /**
   *  Specify the input filepath. This will be used to do parser inference.
   *  Defaults to "auto"
   *  Valid options:
   *     - "foo-plugin.css"
   */
  "filepath": "",

  /**
   *  How to handle whitespaces in HTML.
   *  Defaults to "css"
   *  Valid options:
   *    - css         — Respect the default value of CSS display property.
   *    - strict      — Whitespaces are considered sensitive.
   *    - ignore      — Whitespaces are considered insensitive.
   */
  "htmlWhitespaceSensitivity": "css",

  /**
   *  Insert @format pragma into file's first docblock comment.
   *  Defaults to false
   *  Valid options:
   *    - false
   *    - true
   */
  "insertPragma": false,

  /**
   *  Put > on the last line instead of at a new line.
   *  Defaults to false
   *  Valid options:
   *    - false
   *    - true
   */
  "jsxBracketSameLine": true,

  /**
   *  Use single quotes in JSX.
   *  Defaults to false
   *  Valid options:
   *    - false
   *    - true
   */
  "jsxSingleQuote": false,

  /**
   *  Specify which parse to use.
   *  Defaults to "babylon"
   *  Valid options:
   *     - "flow"             — Flow
   *     - "babel"            — JavaScript
   *     - "babel-flow"       — Flow
   *     - "typescript"       — TypeScript
   *     - "css"              — CSS
   *     - "less"             — Less
   *     - "scss"             — SCSS
   *     - "json"             — JSON
   *     - "json5"            — JSON5
   *     - "json-stringify"   — JSON.stringify
   *     - "graphql"          — GraphQL
   *     - "markdown"         — Markdown
   *     - "mdx"              — MDX
   *     - "vue"              — Vue
   *     - "yaml"             — YAML
   *     - "html"             — HTML
   *     - "angular"          — Angular
   *     - "lwc"              — Lightning Web Component
   */
  "parser": "flow",

  /**
   *  Custom directory that contains prettier plugins in node_modules
   *  subdirectory. Overrides default behavior when plugins are searched
   *  relatively to the location of Prettier. Multiple values are accepted.
   *  Defaults to []
   *  Valid options:
   *     - "./dir-with-plugins"
   */
  "pluginSearchDirs": [],

  /**
   *  Add a plugin. Multiple plugins can be passed as separate `--plugin`s.
   *  Defaults to []
   *  Valid options:
   *     - "./foo-plugin"
   */
  "plugins": [],

  /**
   *  Specify the line length where Prettier will try wrap.
   *  Defaults to 80
   */
  "printWidth": 140,

  /**
   *  How to wrap prose.
   *  Defaults to "preserve"
   *  Valid options:
   *     - "always"    — Wrap prose if it exceeds the print width.
   *     - "never"     — Do not wrap prose." }
   *     - "preserve"  — Wrap prose as-is."
   */
  "proseWrap": "preserve",

  /**
   *  Change when properties in objects are quoted.
   *  Defaults to "as-needed"
   *  Valid options:
   *     - "as-needed"    — Only add quotes around object properties where required.
   *     - "consistent"   — If at least one property in an object requires quotes, quote all properties.
   *     - "preserve"     — Respect the input use of quotes in object properties
   */
  "quoteProps": "as-needed",

  /**
   *  Format code ending at a given character offset (exclusive). The range
   *  will extend forwards to the end of the selected statement. This option
   *  cannot be used with --cursor-offset.
   *  Defaults to null
   *  Valid options:
   *     - integer
   */
  "rangeEnd": -1,

  /**
   *  Format code starting at a given character offset. The range will extend
   *  backwards to the start of the first line containing the selected
   *  statement. This option cannot be used with --cursor-offset.
   *  Defaults to 0
   *  Valid options:
   *     - intege
   */
  "rangeStart": 0,

  /**
   *  Require either '@prettier' or '@format' to be present in the file's
   *  first docblock comment in order for it to be formatted.
   *  Defaults to false
   *  Valid options:
   *     - false
   *     - true
   */
  "requirePragma": false,

  /**
   *  Print semicolons.
   *  Defaults to true
   *  Valid options:
   *     - false
   *     - true
   */
  "semi": false,

  /**
   *  Use single quotes instead of double quotes.
   *  Defaults to false
   *  Valid options:
   *     - false
   *     - true
   */
  "singleQuote": true,

  /**
   *  Number of spaces per indentation level.
   *  Defaults to 2
   */
  "tabWidth": 4,

  /**
   *  Print trailing commas wherever possible when multi-line.
   *  Defaults to "none""
   *  Valid options:
   *     - "none"   — No trailing commas.
   *     - "es5"    — Trailing commas where valid in ES5 (objects, arrays, et
   *     - "all"    — Trailing commas wherever possible (including function argument
   */
  "trailingComma": "es5",

  /**
   *  Indent with tabs instead of spaces.
   *  Defaults to false
   *  Valid options:
   *     - false
   *     - true
   */
  "useTabs": false,

  /**
   *  Provide a list of patterns to override prettier configuration.
   *  Defaults to []
   *  Valid options:
   *     - "files"         <"string"|array[]>  — ( REQUIRED ) Include these files in this override.
   *     - "excludeFiles"  <"string"|array[]>  — ( OPTIONAL ) Exclude these files from this override.
   *     - "options"       { Object }          — ( OPTIONAL ) The options to apply for this override.
   */
  "overrides": [
    {
      "files": ".prettierrc",
      "excludeFiles": [],
      "options": { "parser": "json" }
    },
    {
      "files": ["**/*.html", "**/*.erb"],
      "excludeFiles": [],
      "options": {
        "parser": "html",
        "tabWidth": 4
      }
    },
    {
      "files": ["**/*.css", "**/*.scss"],
      "excludeFiles": [],
      "options": {
        "tabWidth": 4
      }
    },
    {
      "files": ["**/*.js", "**/*.json", "**/*.ts"],
      "excludeFiles": [],
      "options": {
        "tabWidth": 2
      }
    }
  ]
}
